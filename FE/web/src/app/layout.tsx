import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import CustomQueryClientProvider from '@/shared/reactQuery/CustomQueryClientProvider';
import { Suspense } from 'react';

if (process.env.NEXT_RUNTIME === 'nodejs' && process.env.NODE_ENV !== 'production') {
  const { server } = require('@/shared/msw/mock/http');
  server.listen();
}

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang='en'>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased w-dvw `}>
        <CustomQueryClientProvider>
          {/* <MSWProvider> */}
          <Suspense fallback={<div>Loading...</div>}>{children}</Suspense>
          {/* </MSWProvider> */}
        </CustomQueryClientProvider>
      </body>
    </html>
  );
}
